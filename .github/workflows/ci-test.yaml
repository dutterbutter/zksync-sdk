name: ci-run-tests

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    name: unit-tests 🧪
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 'latest'

      - name: Install deps
        run: bun install

      - name: Build
        run: bun run build

      - name: Run unit tests
        run: bun run test

  e2e-tests:
    name: e2e-tests 🔚2️⃣🔚
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 'latest'

      - name: Install deps
        run: bun install --frozen-lockfile

      - name: Install build deps
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install Foundry (anvil)
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          cache: true

      - name: Clone zksync-os-server
        run: git clone https://github.com/matter-labs/zksync-os-server.git

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            zksync-os-server/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('zksync-os-server/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build server
        working-directory: zksync-os-server
        run: cargo build --release --bin zksync_os_bin

      - name: Run anvil L1
        working-directory: zksync-os-server
        run: anvil --load-state ./zkos-l1-state.json --port 8545 &

      - name: Run server
        working-directory: zksync-os-server
        run: |
            if [ -x ./target/release/zksync_os_bin ]; then
              nohup ./target/release/zksync_os_bin > l2.log 2>&1 &
            else
              nohup cargo run --release > l2.log 2>&1 &
            fi

      - name: Wait for zksync OS to start
        working-directory: zksync-os-server
        run: |
          while ! nc -z localhost 3050; do
            echo "Waiting for zksync OS to start..."
            sleep 3
          done
          echo "Sequencer is up and running."

      - name: Run ethers e2e tests
        run: bun run test:e2e:ethers

      - name: Run viem e2e tests
        run: bun run test:e2e:viem

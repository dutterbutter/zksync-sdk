const IL2AssetRouterABI = [
  {
    type: 'function',
    name: 'BASE_TOKEN_ASSET_ID',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'BRIDGE_HUB',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IBridgehub' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'L1_ASSET_ROUTER',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'L1_CHAIN_ID',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'L2_LEGACY_SHARED_BRIDGE',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'acceptOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'assetDeploymentTracker',
    inputs: [{ name: 'assetId', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [{ name: 'assetDeploymentTracker', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'assetHandlerAddress',
    inputs: [{ name: 'assetId', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [{ name: 'assetHandlerAddress', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'eraChainId',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'finalizeDeposit',
    inputs: [
      { name: '', type: 'uint256', internalType: 'uint256' },
      { name: '_assetId', type: 'bytes32', internalType: 'bytes32' },
      { name: '_transferData', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'finalizeDeposit',
    inputs: [
      { name: '_l1Sender', type: 'address', internalType: 'address' },
      { name: '_l2Receiver', type: 'address', internalType: 'address' },
      { name: '_l1Token', type: 'address', internalType: 'address' },
      { name: '_amount', type: 'uint256', internalType: 'uint256' },
      { name: '_data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'finalizeDepositLegacyBridge',
    inputs: [
      { name: '_l1Sender', type: 'address', internalType: 'address' },
      { name: '_l2Receiver', type: 'address', internalType: 'address' },
      { name: '_l1Token', type: 'address', internalType: 'address' },
      { name: '_amount', type: 'uint256', internalType: 'uint256' },
      { name: '_data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'initL2',
    inputs: [
      { name: '_l1ChainId', type: 'uint256', internalType: 'uint256' },
      { name: '_eraChainId', type: 'uint256', internalType: 'uint256' },
      { name: '_l1AssetRouter', type: 'address', internalType: 'address' },
      { name: '_legacySharedBridge', type: 'address', internalType: 'address' },
      { name: '_baseTokenAssetId', type: 'bytes32', internalType: 'bytes32' },
      { name: '_aliasedOwner', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'l1Bridge',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'l1TokenAddress',
    inputs: [{ name: '_l2Token', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'l2TokenAddress',
    inputs: [{ name: '_l1Token', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pause',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'paused',
    inputs: [],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pendingOwner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setAssetHandlerAddress',
    inputs: [
      { name: '_originChainId', type: 'uint256', internalType: 'uint256' },
      { name: '_assetId', type: 'bytes32', internalType: 'bytes32' },
      { name: '_assetHandlerAddress', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setAssetHandlerAddressThisChain',
    inputs: [
      { name: '_assetRegistrationData', type: 'bytes32', internalType: 'bytes32' },
      { name: '_assetHandlerAddress', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setLegacyTokenAssetHandler',
    inputs: [{ name: '_assetId', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'unpause',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'updateL2',
    inputs: [
      { name: '_l1ChainId', type: 'uint256', internalType: 'uint256' },
      { name: '_eraChainId', type: 'uint256', internalType: 'uint256' },
      { name: '_l1AssetRouter', type: 'address', internalType: 'address' },
      { name: '_legacySharedBridge', type: 'address', internalType: 'address' },
      { name: '_baseTokenAssetId', type: 'bytes32', internalType: 'bytes32' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdraw',
    inputs: [
      { name: '_assetId', type: 'bytes32', internalType: 'bytes32' },
      { name: '_assetData', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdraw',
    inputs: [
      { name: '_l1Receiver', type: 'address', internalType: 'address' },
      { name: '_l2Token', type: 'address', internalType: 'address' },
      { name: '_amount', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawLegacyBridge',
    inputs: [
      { name: '_l1Receiver', type: 'address', internalType: 'address' },
      { name: '_l2Token', type: 'address', internalType: 'address' },
      { name: '_amount', type: 'uint256', internalType: 'uint256' },
      { name: '_sender', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'AssetDeploymentTrackerRegistered',
    inputs: [
      { name: 'assetId', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'additionalData', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      {
        name: 'assetDeploymentTracker',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'AssetHandlerRegistered',
    inputs: [
      { name: 'assetId', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      {
        name: '_assetHandlerAddress',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BridgehubDepositBaseTokenInitiated',
    inputs: [
      { name: 'chainId', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'from', type: 'address', indexed: true, internalType: 'address' },
      { name: 'assetId', type: 'bytes32', indexed: false, internalType: 'bytes32' },
      { name: 'amount', type: 'uint256', indexed: false, internalType: 'uint256' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BridgehubDepositInitiated',
    inputs: [
      { name: 'chainId', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'txDataHash', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'from', type: 'address', indexed: true, internalType: 'address' },
      { name: 'assetId', type: 'bytes32', indexed: false, internalType: 'bytes32' },
      { name: 'bridgeMintCalldata', type: 'bytes', indexed: false, internalType: 'bytes' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BridgehubWithdrawalInitiated',
    inputs: [
      { name: 'chainId', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      { name: 'assetId', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'assetDataHash', type: 'bytes32', indexed: false, internalType: 'bytes32' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DepositFinalizedAssetRouter',
    inputs: [
      { name: 'chainId', type: 'uint256', indexed: true, internalType: 'uint256' },
      { name: 'assetId', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'assetData', type: 'bytes', indexed: false, internalType: 'bytes' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Initialized',
    inputs: [{ name: 'version', type: 'uint8', indexed: false, internalType: 'uint8' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferStarted',
    inputs: [
      { name: 'previousOwner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'newOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      { name: 'previousOwner', type: 'address', indexed: true, internalType: 'address' },
      { name: 'newOwner', type: 'address', indexed: true, internalType: 'address' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Paused',
    inputs: [{ name: 'account', type: 'address', indexed: false, internalType: 'address' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Unpaused',
    inputs: [{ name: 'account', type: 'address', indexed: false, internalType: 'address' }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'WithdrawalInitiatedAssetRouter',
    inputs: [
      { name: 'chainId', type: 'uint256', indexed: false, internalType: 'uint256' },
      { name: 'l2Sender', type: 'address', indexed: true, internalType: 'address' },
      { name: 'assetId', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      { name: 'assetData', type: 'bytes', indexed: false, internalType: 'bytes' },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'AmountMustBeGreaterThanZero', inputs: [] },
  {
    type: 'error',
    name: 'AssetIdNotSupported',
    inputs: [{ name: 'assetId', type: 'bytes32', internalType: 'bytes32' }],
  },
  { type: 'error', name: 'EmptyAddress', inputs: [] },
  {
    type: 'error',
    name: 'InvalidCaller',
    inputs: [{ name: '', type: 'address', internalType: 'address' }],
  },
  { type: 'error', name: 'InvalidNTVBurnData', inputs: [] },
  { type: 'error', name: 'NotInitializedReentrancyGuard', inputs: [] },
  { type: 'error', name: 'Reentrancy', inputs: [] },
  { type: 'error', name: 'SlotOccupied', inputs: [] },
  { type: 'error', name: 'TokenNotLegacy', inputs: [] },
  {
    type: 'error',
    name: 'Unauthorized',
    inputs: [{ name: 'caller', type: 'address', internalType: 'address' }],
  },
] as const;

export default IL2AssetRouterABI;
